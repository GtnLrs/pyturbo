from cosapp.systems import System


class TurbofanAero(System):
    """
    Turbofan model.

    """

    def setup(self):
        # inwards
        self.add_inward(
            "primary_nozzle_thrust", 0.0, unit="N", desc="total thrust generated by primary nozzle"
        )
        self.add_inward(
            "secondary_nozzle_thrust",
            0.0,
            unit="N",
            desc="total thrust generated by secondary nozzle",
        )
        self.add_inward("inlet_drag", 0.0, unit="N", desc="inlet total drag")

        self.add_inward("fuel_W", 1.0, unit="kg/s", desc="fuel mass flow")
        self.add_inward("core_opr", 0.0, unit="", desc="high-pressure core overall pressure ratio")
        self.add_inward("booster_pr", 0.0, unit="", desc="fan and booster pressure ratio")

        # outwards
        self.add_outward("thrust", 1.0, unit="N", desc="engine thrust")
        self.add_outward("sfc", 1.0, unit="kg / (daN * h)", desc="specific consumption")
        self.add_outward("opr", 1.0, unit="", desc="overall pressure ratio")
        self.add_outward(
            "pr_split", 1.0, unit="", desc="pressure ratio split hp compressor over booster"
        )

    def compute(self):
        self.thrust = self.primary_nozzle_thrust + self.secondary_nozzle_thrust - self.inlet_drag
        self.sfc = self.fuel_W * 3600 / (self.thrust / 10)
        self.opr = self.core_opr * self.booster_pr
        self.pr_split = self.core_opr / self.booster_pr
